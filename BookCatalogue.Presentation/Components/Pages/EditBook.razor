@page "/edit/{id:int}"
@inject IBookRepository BookRepository
@inject NavigationManager Navigation

<PageTitle>
    Edit Book
</PageTitle>

@if (book is not null)
{
    <div class="row justify-content-center">
    <div class="col-md-6">
        <EditForm Enhance="true" method="post" FormName="EditBookForm" OnValidSubmit="EditABook" Model="book"
            aria-autocomplete="off">
            <div class="d-flex justify-content-between">
                <h4>Editing <strong><i class="mb-3">@book.Title</i></strong></h4>
                <a href="/" class="btn btn-secondary ms-3">Back To All Books</a>
            </div>
            
            <input type="hidden" name="@book.Id" value="@book.Id" />
            <div class="mb-3">
                <label for="title" class="form-label">Title</label>
                <InputText id="title" @bind-Value="book.Title" class="form-control shadow-none"></InputText>
            </div>
            <div class="mb-3">
                <label for="author" class="form-label">Author</label>
                <InputText id="author" @bind-Value="book.Author" class="form-control shadow-none"></InputText>
            </div>
            <div class="mb-3">
                <label for="publication-date" class="form-label">Publication Date</label>
                <InputDate id="publication-date" @bind-Value="book.PublicationDate" class="form-control shadow-none">
                </InputDate>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <InputSelect id="category" @bind-Value="book.Category" class="form-control shadow-none">
                    <option value="0">
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                            {
                            <option value="@category">@category.ToString()</option>
                            }
                        </option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">
                        Save Changes
                    </button>
                    
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>
        </div>
    </div>

}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public Book? book { get; set; }

    protected override async Task OnInitializedAsync()
    {
        book ??= await BookRepository.GetBookByIdAsync(Id);
    }

    private async Task EditABook()
    {
        if (book is not null)
        {
            await BookRepository.UpdateBookAsync(book);
            Navigation.NavigateTo("/");
        }
    }
}