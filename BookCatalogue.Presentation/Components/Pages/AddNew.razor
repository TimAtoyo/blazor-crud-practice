@page "/add-new"

@inject IBookRepository Repository
@inject NavigationManager Navigation

<PageTitle>Add new Book</PageTitle>
<div class="row justify-content-center">
    <div class="col-md-6">
        <EditForm Enhance="true" method="post" FormName="AddBookForm" OnValidSubmit="AddBook" Model="book"
            aria-autocomplete="off">
            <h4>Add New Book</h4>
            <div class="mb-3">
                <label for="title" class="form-label">Title</label>
                <InputText id="title" @bind-Value="book.Title" class="form-control shadow-none"></InputText>
            </div>
            <div class="mb-3">
                <label for="author" class="form-label">Author</label>
                <InputText id="author" @bind-Value="book.Author" class="form-control shadow-none"></InputText>
            </div>
            <div class="mb-3">
                <label for="publication-date" class="form-label">Publication Date</label>
                <InputDate id="publication-date" @bind-Value="book.PublicationDate" class="form-control shadow-none">
                </InputDate>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <InputSelect id="category" @bind-Value="book.Category" class="form-control shadow-none">
                    <option value="0">
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                        <option value="@category">@category.ToString()</option>
                        }
                    </option>
                </InputSelect>
            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-primary">
                    Submit
                </button>
                <a href="/" class="btn btn-secondary ms-3">Back To All Books</a>
            </div>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Book book { get; set; } = new();


    private async Task AddBook()
    {
        await Repository.AddAsync(book);
        Navigation.NavigateTo("/");
    }
}
